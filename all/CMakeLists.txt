# This file should be used for development with IDEs for the best discovery
cmake_minimum_required(VERSION 3.8)

project(Result_all CXX)

set(Result_INCLUDE_WITHOUT_SYSTEM YES)
set(CMAKE_INSTALL_INCLUDEDIR include/Result)

add_subdirectory(.. sub/root)

# Add warnings to the library target
include(../cmake/Warnings.cmake)
target_compile_options(Result_Result INTERFACE ${project_warnings})

# Use a dummy target to enable all IDEs to see the header files of a header only
# library
set(
    headers
    "../include/result.hpp"
)
file(
    WRITE "${PROJECT_BINARY_DIR}/dummy.cpp"
    "// Generated by CMake, do not edit\n"
)
add_library(
    Result_sources EXCLUDE_FROM_ALL
    "${PROJECT_BINARY_DIR}/dummy.cpp" ${headers}
)
target_link_libraries(Result_sources PRIVATE Result_Result)

# Test subproject has no knowledge of the root project at build time, so this
# test can only be added here
include(../cmake/AddSelfContainmentTest.cmake)

add_self_containment_test(
    Result.SelfContainmentTest
    TARGET Result_Result
    HEADERS "${headers}"
)

# The above add_subdirectory call creates the necessary target(s), add a stub
file(WRITE "${PROJECT_BINARY_DIR}/configs/ResultConfig.cmake" "")
set(Result_DIR "${PROJECT_BINARY_DIR}/configs" CACHE INTERNAL "")

# Catch2 from conan does not add its test discovery module to the module path,
# so it has to be done here ahead of time to keep the test CML clean
# TODO: report the issue upstream
find_package(Catch2 REQUIRED)
include(Catch OPTIONAL RESULT_VARIABLE is_proper_Catch2_include)
if(NOT is_proper_Catch2_include)
  list(GET CMAKE_MODULE_PATH 0 Catch2_module_path)
  string(APPEND Catch2_module_path lib/cmake/Catch2)
  list(REMOVE_AT CMAKE_MODULE_PATH 0)
  list(INSERT CMAKE_MODULE_PATH 0 "${Catch2_module_path}")
endif()

add_subdirectory(../test sub/test)
